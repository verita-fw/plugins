{% from 'Muro/Macros/interface.macro' import physical_interface %}

{% if helpers.exists('Muro.maltrail.server.enabled') and Muro.maltrail.server.enabled == '1' %}

# [Server]
HTTP_ADDRESS {{ Muro.maltrail.server.listenaddress }}
HTTP_PORT {{ Muro.maltrail.server.listenport }}
USE_SSL false

# Regular expression to be used in external /fail2ban calls for extraction of attacker source IPs
FAIL2BAN_REGEX attacker|reputation|potential[^"]*(web scan|directory traversal|injection|remote code)|spammer|mass scanner

{%   if helpers.exists('Muro.maltrail.server.loglistenaddress') and Muro.maltrail.server.loglistenaddress != '' %}
UDP_ADDRESS {{ Muro.maltrail.server.loglistenaddress }}
{%   endif %}
{%   if helpers.exists('Muro.maltrail.server.loglistenport') and Muro.maltrail.server.loglistenport != '' %}
UDP_PORT {{ Muro.maltrail.server.loglistenport }}
{%   endif %}
{% else %}
HTTP_PORT {{ Muro.maltrail.server.listenport }}
{% endif %}

{% if helpers.exists('Muro.maltrail.sensor.enabled') and Muro.maltrail.sensor.enabled == '1' %}
{%   if helpers.exists('Muro.maltrail.sensor.remoteserver') and Muro.maltrail.sensor.remoteserver != '' %}
LOG_SERVER {{ Muro.maltrail.sensor.remoteserver }}:{{ Muro.maltrail.sensor.remoteport }}
DISABLE_LOCAL_LOG_STORAGE true
{%   else %}
DISABLE_LOCAL_LOG_STORAGE false
{%   endif %}
{% endif %}

{% if helpers.exists('Muro.maltrail.sensor.enabled') and Muro.maltrail.sensor.enabled == '1' %}
{%   if helpers.exists('Muro.maltrail.sensor.syslogserver') and Muro.maltrail.sensor.syslogserver != '' %}
SYSLOG_SERVER {{ Muro.maltrail.sensor.syslogserver }}:{{ Muro.maltrail.sensor.syslogport }}
{%   endif %}
{% endif %}

SENSOR_NAME $HOSTNAME
CUSTOM_TRAILS_DIR /usr/local/maltrail/trails/custom/
PROCESS_COUNT $CPU_CORES
DISABLE_CPU_AFFINITY false
USE_FEED_UPDATES true
DISABLED_FEEDS turris, ciarmy, policeman, myip, alienvault
UPDATE_PERIOD {{ Muro.maltrail.general.updateperiod }}
USE_SERVER_UPDATE_TRAILS false
{% if helpers.exists('Muro.maltrail.general.heuristics') and Muro.maltrail.general.heuristics == '1' %}
USE_HEURISTICS true
{% else %}
USE_HEURISTICS false
{% endif %}
{% if helpers.exists('Muro.maltrail.general.checkhostheader') and Muro.maltrail.general.checkhostheader == '1' %}
CHECK_HOST_DOMAINS true
{% else %}
CHECK_HOST_DOMAINS false
{% endif %}
CHECK_MISSING_HOST false
{% if helpers.exists('Muro.maltrail.general.whitelist') and Muro.maltrail.general.whitelist != '' %}
USER_WHITELIST /usr/local/share/maltrail/misc/user_whitelist.txt
{% endif %}
CHECK_HOST_DOMAINS false
SHOW_DEBUG false
LOG_DIR /var/log/maltrail
{% if helpers.exists('Muro.maltrail.general.monitorinterface') and Muro.maltrail.general.monitorinterface != '' %}
{%   set interfaces = [] %}
{%   for interface in Muro.maltrail.general.monitorinterface.split(',') %}
{%     do interfaces.append(physical_interface(interface)) %}
{%   endfor %}
MONITOR_INTERFACE {{ interfaces|join(',') }}
{% else %}
MONITOR_INTERFACE any
{% endif %}
{% if helpers.empty('Muro.maltrail.sensor.capturebuffer') %}
CAPTURE_BUFFER 10%
{% else %}
CAPTURE_BUFFER {{Muro.maltrail.sensor.capturebuffer}}MB
{% endif %}
{% if helpers.exists('Muro.maltrail.sensor.captureall') and Muro.maltrail.sensor.captureall == '1' %}
CAPTURE_FILTER ip or ip6
{% else %}
CAPTURE_FILTER udp or icmp or (tcp and (tcp[tcpflags] == tcp-syn or port 80 or port 1080 or port 3128 or port 8000 or port 8080 or port 8118))
{% endif %}
USERS
    admin:{{ Muro.maltrail.general.adminpassword }}:2000:0.0.0.0/0                        # changeme!
